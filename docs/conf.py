# -*- coding: utf-8 -*-
#
# NFD - Named Data Networking Forwarding Daemon documentation build configuration file, created by
# sphinx-quickstart on Sun Apr  6 19:58:22 2014.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
import re

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.todo',
    'redmine_issue',
]

def addExtensionIfExists(extension):
    try:
        __import__(extension)
        extensions.append(extension)
    except ImportError:
        sys.stderr.write("Extension '%s' in not available. "
                         "Some documentation may not build correctly.\n" % extension)
        sys.stderr.write("To install, use \n"
                         "  sudo pip install %s\n" % extension.replace('.', '-'))

addExtensionIfExists('sphinxcontrib.doxylink')

if os.getenv('GOOGLE_ANALYTICS', None):
    addExtensionIfExists('sphinxcontrib.googleanalytics')

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'ndn-cxx: NDN C++ library with eXperimental eXtensions'
copyright = u'Copyright (c) 2013-2015 Regents of the University of California.'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
# html_theme = 'default'
html_theme = 'named_data_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = ['./']

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
html_file_suffix = ".html"

# Output file base name for HTML help builder.
htmlhelp_basename = 'ndn-cxx-docs'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  ('index', 'ndn-cxx-docs.tex', u'NDN C++ library with eXperimental eXtensions',
   u'Named Data Networking Project', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# If true, show URL addresses after external links.
man_show_urls = True

# ---- Custom options --------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('manpages/ndn-client.conf', 'ndn-client.conf', u'System configuration of the NDN platform', None, 1),
    ('manpages/ndnsec-cert-dump', 'ndnsec-cert-dump', u'Dump certificates from the Public Info Base', None, 1),
    ('manpages/ndnsec-cert-gen', 'ndnsec-cert-gen', u'Issue an identity certificate', None, 1),
    ('manpages/ndnsec-cert-install', 'ndnsec-cert-install', u'Install a certificate into the Public Information Base', None, 1),
    ('manpages/ndnsec-cert-revoke', 'ndnsec-cert-revoke', u'Generate certificate revocation data', None, 1),
    ('manpages/ndnsec-delete', 'ndnsec-delete', u'Delete security data from the Public Information Base and Trusted Platform Module', None, 1),
    ('manpages/ndnsec-dsk-gen', 'ndnsec-dsk-gen', u'Generate a pair of Data-Signing-Key (DSK)', None, 1),
    ('manpages/ndnsec-export', 'ndnsec-export', u'Export an identity\'s secure data', None, 1),
    ('manpages/ndnsec-get-default', 'ndnsec-get-default', u'Display the default settings of a particular entity', None, 1),
    ('manpages/ndnsec-import', 'ndnsec-import', u'Import an identity\`s security data', None, 1),
    ('manpages/ndnsec-key-gen', 'ndnsec-key-gen', u'Generate a pair of keys', None, 1),
    ('manpages/ndnsec-list', 'ndnsec-list', u'Display entities stored in the Public Information Base', None, 1),
    ('manpages/ndnsec', 'ndnsec', u'Command-line toolkit for NDN security', None, 1),
    ('manpages/ndnsec-set-acl', 'ndnsec-set-acl', u'Add an application into a private key\'s Access Control List', None, 1),
    ('manpages/ndnsec-set-default', 'ndnsec-set-default', u'Change default security settings', None, 1),
    ('manpages/ndnsec-sign-req', 'ndnsec-sign-req', u'Generate signing requests for a particular key', None, 1),
    ('manpages/ndnsec-unlock-tpm', 'ndnsec-unlock-tpm', u'Unlock the Trusted Platform Module', None, 1),
    ('tutorials/security-validator-config', 'ndnsec-validator.conf',
     'NDN trust validator configuration file', None, 5)
]


doxylink = {
  'ndn-cxx' : ('ndn-cxx.tag', 'doxygen/'),
}

if os.getenv('GOOGLE_ANALYTICS', None):
    googleanalytics_id = os.environ['GOOGLE_ANALYTICS']
    googleanalytics_enabled = True

# exclude_patterns = ['RELEASE_NOTES.rst']

redmine_project_url = "https://redmine.named-data.net/"
